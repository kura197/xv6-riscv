3250 #!/usr/bin/perl -w
3251 
3252 # Generate vectors.S, the trap/interrupt entry points.
3253 # There has to be one entry point per interrupt number
3254 # since otherwise there's no way for trap() to discover
3255 # the interrupt number.
3256 
3257 print "# generated by vectors.pl - do not edit\n";
3258 print "# handlers\n";
3259 print ".globl alltraps\n";
3260 for(my $i = 0; $i < 256; $i++){
3261     print ".globl vector$i\n";
3262     print "vector$i:\n";
3263     if(!($i == 8 || ($i >= 10 && $i <= 14) || $i == 17)){
3264 		print "  addi sp,sp,-4\n";
3265 		#print "  pushl \$0\n";
3266         print "  sw zero,0(sp)\n";
3267     }
3268 	print "  addi sp,sp,-4\n";
3269 	# print "  pushl \$$i\n";
3270 	print "  li t6,$i\n";
3271 	print "  sw t6,0(sp)\n";
3272 	#print "  jmp alltraps\n";
3273     print "  j alltraps\n";
3274 }
3275 
3276 print "\n# vector table\n";
3277 print ".data\n";
3278 print ".globl vectors\n";
3279 print "vectors:\n";
3280 for(my $i = 0; $i < 256; $i++){
3281     print "  .long vector$i\n";
3282 }
3283 
3284 # sample output:
3285 #   # handlers
3286 #   .globl alltraps
3287 #   .globl vector0
3288 #   vector0:
3289 #     pushl $0
3290 #     pushl $0
3291 #     jmp alltraps
3292 #   ...
3293 #
3294 #   # vector table
3295 #   .data
3296 #   .globl vectors
3297 #   vectors:
3298 #     .long vector0
3299 #     .long vector1
3300 #     .long vector2
3301 #   ...
3302 
3303 
3304 
3305 
3306 
3307 
3308 
3309 
3310 
3311 
3312 
3313 
3314 
3315 
3316 
3317 
3318 
3319 
3320 
3321 
3322 
3323 
3324 
3325 
3326 
3327 
3328 
3329 
3330 
3331 
3332 
3333 
3334 
3335 
3336 
3337 
3338 
3339 
3340 
3341 
3342 
3343 
3344 
3345 
3346 
3347 
3348 
3349 
